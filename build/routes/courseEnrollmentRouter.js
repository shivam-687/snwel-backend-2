"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.courseEnrollmentRouter = void 0;
const express_1 = __importDefault(require("express"));
const passport_1 = __importDefault(require("passport"));
const courseEnrollmentController_1 = require("../controllers/courseEnrollmentController");
const validateSchema_1 = require("../middleware/validateSchema");
const course_enrollment_1 = require("../entity-schema/course-enrollment");
const checkAlreadyApplied_1 = require("../middleware/checkAlreadyApplied");
const router = express_1.default.Router();
exports.courseEnrollmentRouter = router;
router.get('/', passport_1.default.authenticate('jwt', { session: false }), courseEnrollmentController_1.getAllController);
router.post('/', (0, validateSchema_1.validateSchema)(course_enrollment_1.createCourseEnrollment), (0, checkAlreadyApplied_1.checkAlreadyApplied)(), courseEnrollmentController_1.createController);
router.post('/anon', (0, validateSchema_1.validateSchema)(course_enrollment_1.createEnrollmentAnonymously), courseEnrollmentController_1.createByAnonymous);
router.post('/verify-otp', courseEnrollmentController_1.verifyOtpController);
router.post('/resend-otp', courseEnrollmentController_1.resendOtpController);
router.get('/:id', passport_1.default.authenticate('jwt', { session: false }), courseEnrollmentController_1.getByIdController);
router.put('/:id', passport_1.default.authenticate('jwt', { session: false }), courseEnrollmentController_1.updateController);
router.delete('/:id', passport_1.default.authenticate('jwt', { session: false }), courseEnrollmentController_1.deleteController);
